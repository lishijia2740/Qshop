"""
Django settings for Qshop project.

Generated by 'django-admin startproject' using Django 2.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'vr1ep_d3!6@_o&+(y*%ea^s&-%+b)yn#25^3x%z!#u%46hnx!l'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition


INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'Seller',
    'Buyer',
    'djcelery',
    'Buyer.templatetags',
]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'Qshop.middlewaretest.MiddleWareTest',
    'django.middleware.cache.FetchFromCacheMiddleware',
]

ROOT_URLCONF = 'Qshop.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Qshop.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'qshop',
        'USER': 'root',
        'PASSWORD': 'root',
        'HOST': '127.0.0.1',
        'PORT': '3306',
    },
    # 'default': {
    #     'ENGINE': 'django.db.backends.mysql',
    #     'NAME': 'demo',
    #     'USER': 'root',
    #     'PASSWORD': 'root',
    #     'HOST': '10.10.92.196',
    #     'PORT': '3306',
    # },
    # 'slave': {
    #     'ENGINE': 'django.db.backends.mysql',
    #     'NAME': 'demo',
    #     'USER': 'root',
    #     'PASSWORD': 'root',
    #     'HOST': '10.10.92.199',
    #     'PORT': '3306',
    # }
}

# DATABASE_ROUTERS = ["Qshop.mydbrouter.Router"]


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

# STATIC_ROOT = os.path.join(BASE_DIR, "static")
#媒体文件
MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "static")

from alipay import AliPay

#公钥的配置
alipay_public_key_string="""-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAjfVCqKIrdlTaPssS2Boi6+1pCgaBhvpNgaa0qBZS+/UUhFh6cw4MVvb1a4+CJ4ZyB162IeQHu5WD0QGpJ4p2T+qC9lHlZPbukc0SZcwlD3XDyzTpq4gEbuZ5UgWEjcXG/ehXuB17I+4noL9RJyGVnEDDMMNg5UTGdCbtlsi1VtRJhQ4bwdX7MeZ4lzuyxJ3dE295w4k4YvK3DE9sDMvLpubIDZkylyZneJYjllIxG/Hen1Ap77v9cOBifx1G4C62J9hOjf243u3/47pCJYC8oMdupyDUg8mfTlip/TWnb6/RGCVCRlitt/fsUf4L10G4HBV3cB2IPMPgcJemN4u1vQIDAQAB
-----END PUBLIC KEY-----"""
#私钥的配置
app_private_key_string ="""-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEAjfVCqKIrdlTaPssS2Boi6+1pCgaBhvpNgaa0qBZS+/UUhFh6cw4MVvb1a4+CJ4ZyB162IeQHu5WD0QGpJ4p2T+qC9lHlZPbukc0SZcwlD3XDyzTpq4gEbuZ5UgWEjcXG/ehXuB17I+4noL9RJyGVnEDDMMNg5UTGdCbtlsi1VtRJhQ4bwdX7MeZ4lzuyxJ3dE295w4k4YvK3DE9sDMvLpubIDZkylyZneJYjllIxG/Hen1Ap77v9cOBifx1G4C62J9hOjf243u3/47pCJYC8oMdupyDUg8mfTlip/TWnb6/RGCVCRlitt/fsUf4L10G4HBV3cB2IPMPgcJemN4u1vQIDAQABAoIBAESfCln6Coho/Bbek31jJP5nBR+ThYl59X122F1obTTeg8x1+LslT1G6j2gvNvtkQjrNzb0UPaiv3chqxRoYFJkNA8GOVRU5SJmyR/JtfHy8sKjKKyp/1aTGRF8hy7G8qTST29NkbOIxfXZ3BQOleGzP4Yrw5yXs2QHMz4zT+NS/iYqxkhDWJen+MbbLbJgWUfyuSb9lc5cfGZFCuMd6KPPaYXyDlRO2U/CIqEiDJh84WD7f56P0SqwvCkivG//BPdrQqnqRH6CJ650gA5rB+VokQ8JAjTWu0sAfWp218gPGOjwe1WQPYL7YrKyxK3BZLBR2OaabB8JElPLuD7R0SQECgYEA/21yyJbeWOToe0e3+HzZG+pizQX1KByDG87wcZUfRhV5B38KllEwRD1WANzwQrEQwUFIT5Jwzgk/qSXRwIiCH/HgZe+6zgV+MhG2TZNWzXwCcK8YTATVsGGNkzftTu0ENseQDXIIwneOlRnk5KzvbUCLLgEa+PLksSWUyXMzducCgYEAjka1d94Z15F79JuP2pNAiSb6hZVf7zQvFWsrsn+JetpSr9KGMYw0ZR2KaGdRhavL+smqc2qDsoEFIeJmHwvuSXFTZ8BuJew8gXsJYTghfzUUZReLxRV7XThppQQ+ZHTE9dXPgVjtnhP85m6tYuLqHHXltlLqZSkwtdOFKxkg7bsCgYAmjroGB6g22Q8zFOdzjj0j1qTleCHC1VMBTqLDMpSO+szTUd0iRc04b93csX1fQ+VYluc4g82dfI3slbXtD249LkEGgkK7uN6M5lmTqksvJ6oionvTdeNgBcneUFH1WRgKwONA9FbYLD4MyeTglC5sWpLn9ejBbcER8K9eHZLGPwKBgB/RvooFWSA2AFPvapfGsPs7hXHUu3Ti5djTdB1impuoMi/yVGLGaX1nwumgmcHcby0yZvWTD8sfQceXO6Gb6HnyZ2XfyoKet9V5b9qXVB5//4SwZGj6afGqSS5HqbCL0PTuEY9rFRFyhPAANrTT7OnakDpbhuKC+MrheHnwD8Y7AoGBAIEWoCScUB/v7oEqRSWYABRqUT/z+6/XYnLUMCQtSTobVOfUfVb+En2eefoMVNsu395rv7JRQvNXVtG28zIyKRz4sxHPtySTvh4z0xowZeGewtBZxEe2yNX4IOBEu9U+3qrCX0RArFpm/EI8OuSs52i3WL09mJkekibCO4HnQGRC
-----END RSA PRIVATE KEY-----"""


#示例化对象
appid = "2016101700706732"
alipay = AliPay(
    appid=appid,
    app_notify_url=None,
    app_private_key_string=app_private_key_string,
    alipay_public_key_string=alipay_public_key_string, sign_type="RSA2",
    debug=False
)


import djcelery ## 导包
djcelery.setup_loader() ## 模块加载
BROKER_URL = 'redis://127.0.0.1:6379/1' ### 中间人 消息中间件 指定连接redis中的第二个库作为消息队列
CELERY_IMPORTS = ('CeleryTask.tasks') ##具体的任务文件
CELERY_TIMEZONE = 'Asia/Shanghai' ## celery 时区
CELERYBEAT_SCHEDULER = "djcelery.schedulers.DatabaseScheduler" ### celery的处理器 固定的


CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION': [
            "127.0.0.1:11211"
        ]
    }
}

CACHE_MIDDLEWARE_KEY_PREFIX = ''
CACHE_MIDDLEWARE_SECONDS = 600
CACHE_MIDDLEWARE_ALIAS = 'default'

import os
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'django.log'),
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}


